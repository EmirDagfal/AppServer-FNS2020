openapi: 3.0.0

info:
  title: API FNS 2020
  description: "API destinada al control del sistema de Telegestion para la demo de la Fiesta Nacional del Sol 2020"
  contact:
    email: emirdagfal@gmail.com
  version: 1.0.0

servers:
- url: localhost:3000

paths:

  /alerts:
    post:
      tags: [Alerts]
      summary: Crear una alerta
      operationId: postAlerts
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Alert'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Alerts]
      summary: Obtener alertas
      operationId: getAlerts
      parameters:
      - name: dev_id
        in: query
        schema:
          type: string
        description: ID ligado al dispositivo
        required: false
      - name: type
        in: query
        schema:
          type: string
          enum: [POWER COMMUNICATION]
        description: Tipo de alerta
        example: POWER
        required: false
      - name: code
        in: query
        schema:
          type: number
        description: Codigo de alerta
        example: 101
        required: false
      - name: viewed
        in: query
        schema:
          type: boolean
        description: Alerta vista
        example: false
        required: false
      - name: from
        in: query
        schema:
          type: string
          format: date-time
        description: Desde
        example: '2018-03-20T09:12:28Z'
        required: false
      - name: to
        in: query
        schema:
          type: string
          format: date-time
        description: Hasta
        example: '2018-03-20T12:12:28Z'
        required: false
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        500:
          description: Error al obtener el recurso
          content: {}
    delete:
      tags: [Alerts]
      summary: Eliminar alertas
      operationId: deleteAlerts
      parameters:
      - name: dev_id
        in: query
        schema:
          type: string
        description: ID ligado al dispositivo
        required: false
      - name: type
        in: query
        schema:
          type: string
          enum: [POWER COMMUNICATION]
        description: Tipo de alerta
        example: POWER
        required: false
      - name: code
        in: query
        schema:
          type: number
        description: Codigo de alerta
        example: 101
        required: false
      - name: viewed
        in: query
        schema:
          type: boolean
        description: Alerta vista
        example: false
        required: false
      - name: from
        in: query
        schema:
          type: string
          format: date-time
        description: Desde
        example: '2018-03-20T09:12:28Z'
        required: false
      - name: to
        in: query
        schema:
          type: string
          format: date-time
        description: Hasta
        example: '2018-03-20T12:12:28Z'
        required: false
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}

  /alerts/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Alerts]
      summary: Obtener alerta
      operationId: getAlert
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Alerts]
      summary: Actualizar alerta
      operationId: patchAlert
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Alerts]
      summary: Eliminar alerta
      operationId: deleteAlert
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}

  /apps:
    post:
      tags: [Apps]
      summary: Crear una aplicación
      operationId: postApps
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/App'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Apps]
      summary: Obtener aplicaciónes
      operationId: getApps
      parameters:
      - name: name
        in: query
        schema:
          type: string
          enum: [SmartCell-LoRa]
        description: Nombre de la aplicacion
        example: SmartCell-LoRa
        required: false
      - name: version
        in: query
        schema:
          type: string
        description: Version de la aplicacion
        example: '1.0.1'
        required: false
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        500:
          description: Error al obtener el recurso
          content: {}

  /apps/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Apps]
      summary: Obtener aplicación
      operationId: getApp
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Apps]
      summary: Actualizar aplicación
      operationId: patchApp
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Apps]
      summary: Eliminar aplicación
      operationId: deleteApp
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}

  /client:
    post:
      tags: [Clients]
      summary: Crear un cliente
      operationId: postClients
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Client'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Clients]
      summary: Obtener clientes
      operationId: getClients
      parameters:
      - name: name
        in: query
        schema:
          type: string
        description: Nombre del cliente
        example: Municipalidad de la Ciudad de San Juan
        required: false
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        500:
          description: Error al obtener el recurso
          content: {}

  /client/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Clients]
      summary: Obtener cliente
      operationId: getClient
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Clients]
      summary: Actualizar cliente
      operationId: patchClient
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Clients]
      summary: Eliminar cliente
      operationId: deleteClient
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}
  
  /data:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    post:
      tags: [Data]
      summary: Crear un dato
      operationId: postData
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Data'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Data]
      summary: Obtener grupo de datos
      operationId: getDataGroups
      parameters:
      - name: dev_id
        in: query
        schema:
          type: string
        description: ID ligado al dispositivo
        required: false
      - name: power
        in: query
        schema:
          type: number
          format: float
        description: Potencia media sensada en el dispositivo
        example: 215.7
        required: false
      - name: energy
        in: query
        schema:
          type: number
          format: unsigned int
        description: Consumo de energia indicada por medidor externo
        example: 152
        required: false
      - name: dimming
        in: query
        schema:
          type: number
          format: unsigned int
        description: Niver de atenuacion de la luz
        example: 90
        required: false
      - name: from
        in: query
        schema:
          type: string
          format: date-time
        description: Desde
        example: '2018-03-20T09:12:28Z'
        required: false
      - name: to
        in: query
        schema:
          type: string
          format: date-time
        description: Hasta
        example: '2018-03-20T12:12:28Z'
        required: false
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        500:
          description: Error al obtener el recurso
          content: {}
    delete:
      tags: [Data]
      summary: Eliminar grupos de datos
      operationId: deleteDataGroups
      parameters:
      - name: confirm
        in: query
        schema:
          type: boolean
        description: Confirmacion
        example: true
        required: true
      - name: dev_id
        in: query
        schema:
          type: string
        description: ID ligado al dispositivo
        required: false
      - name: from
        in: query
        schema:
          type: string
          format: date-time
        description: Desde
        example: '2018-03-20T09:12:28Z'
        required: false
      - name: to
        in: query
        schema:
          type: string
          format: date-time
        description: Hasta
        example: '2018-03-20T12:12:28Z'
        required: false
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}
  
  /data/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Data]
      summary: Obtener datos
      operationId: getData
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Data]
      summary: Actualizar datos
      operationId: patchData
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Data]
      summary: Eliminar datos
      operationId: deleteData
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}

  /devices:
    post:
      tags: [Devices]
      summary: Crear un dispositivo
      operationId: postDevices
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Device'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Devices]
      summary: Obtener dispositivos
      operationId: getDevices
      parameters:
      - name: type
        in: query
        schema:
          type: string
          enum: [LORA]
        description: Tipo de dispositivo segun su tecnologia de comunicacion
        example: LORA
        required: false
      - name: app_id
        in: query
        schema:
          type: string
        description: ID unico correspondiente a la aplicacion
        required: false
      - name: client_id
        in: query
        schema:
          type: string
        description: ID unico correspondiente al cliente
        required: false
      - name: EUI
        in: query
        schema:
          type: string
          format: byte
        description: Device-EUI unico ligado al dispositivo LoRa
        example: '0080000004001FAB'
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        500:
          description: Error al obtener el recurso
          content: {}

  /devices/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Devices]
      summary: Obtener dispositivo
      operationId: getDevice
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Devices]
      summary: Actualizar dispositivo
      operationId: patchDevice
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Devices]
      summary: Eliminar dispositivo
      operationId: deleteDevice
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}

  /zones:
    post:
      tags: [Zones]
      summary: Crear una zona
      operationId: postZones
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Zone'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Zones]
      summary: Obtener zonas
      operationId: getZones
      parameters:
      - name: name
        in: query
        schema:
          type: string
        description: Nombre de la zona
        example: Zona_1
        required: false
      - name: devices
        in: query
        schema:
          type: string
        description: ID del dispositivo incluido en la zona
        required: false
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        500:
          description: Error al obtener el recurso
          content: {}

  /zones/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Zones]
      summary: Obtener zona
      operationId: getZone
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Zones]
      summary: Actualizar zona
      operationId: patchZone
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Zones]
      summary: Eliminar zona
      operationId: deleteZone
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}

  /zone_grups:
    post:
      tags: [Zone_Groups]
      summary: Crear un grupo de zonas
      operationId: postZone_Groups
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Zone_Group'
        400:
          description: Datos incorrectos o mala sintaxis
          content: {}
        500:
          description: Error al crear el recurso
          content: {}
    get:
      tags: [Zone_Groups]
      summary: Obtener grupos de zonas
      operationId: getZone_Groups
      parameters:
      - name: name
        in: query
        schema:
          type: string
        description: Nombre del grupo de zonas
        example: Grupo A
        required: false
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone_Group'
        500:
          description: Error al obtener el recurso
          content: {}

  /zone_grups/{_id}:
    parameters:
      - in: path
        name: _id
        description: El id del recurso
        schema: 
          type: string
          format: uuid
          example: 5e1a0651741b255ddda996c4
        required: true
    get:
      tags: [Zone_Groups]
      summary: Obtener grupo de zonas
      operationId: getZone_Group
      responses:
        201:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone_Group'
        500:
          description: Error al obtener el recurso
          content: {}
    patch:
      tags: [Zone_Groups]
      summary: Actualizar grupo de zonas
      operationId: patchZone_Group
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone_Group'
        500:
          description: Error al actualizar el recurso
          content: {}
    delete:
      tags: [Zone_Groups]
      summary: Eliminar grupo de zonas
      operationId: deleteZone_Group
      responses:
        202:
          description: Recurso eliminado exitosamente
          content: {}
        500:
          description: Error al eliminar el recurso
          content: {}


components:
  schemas:

    Alert:
      required:
      - dev_id
      - type
      - code
      - time
      type: object
      properties:
        dev_id:
          type: string
          description: ID unico ligado al dispositivo
        type:
          type: string
          enum: [POWER COMMUNICATION]
          description: Tipo de alerta
          example: POWER
        code:
          type: number
          description: Codigo de alerta
          example: 101
        viewed:
          type: boolean
          description: Alerta vista
          example: false
        time:
          type: string
          format: date-time
          description: Tiempo al momento de recibir el dato
          example: '2018-03-20T09:12:28Z'

    App:
      required:
        - app_id
        - name
        - version
      type: object
      properties:
        app_id:
          type: string
          description: ID unico correspondiente a la aplicacion
        name:
          type: string
          description: Nombre de la aplicacion
          enum: [SmartCell-LoRa]
          example: SmartCell-LoRa
        vesion:
          type: string
          example: 1.0.1
        description:
          type: string
          description: Descripcion breve de la aplicacion
          example: Aplicacion de luminarias publicas controladas por LoRaWAN

    Client:
      required:
        - client_id
        - name
      type: object
      properties:
        client_id:
          type: string
          description: ID unico correspondiente al cliente
        name:
          type: string
          description: Nombre del cliente
          example: Municipalidad de la Ciudad de San Juan
        apps:
          type: array
          items:
            type: string
            enum: [SmartCell-LoRa]
            description: ID de las aplicaciones a las que esta suscripto el cliente
            example: SmartCell-LoRa

    Data:
      required:
      - dev_id
      - time
      type: object
      properties:
        dev_id:
          type: string
          description: ID unico ligado al dispositivo
        power:
          type: number
          format: float
          description: Potencia media sensada en el dispositivo
          example: 215.7
        energy:
          type: number
          format: unsigned int
          description: Consumo de energia indicada por medidor externo
          example: 152
        dimming:
          type: number
          format: unsigned int
          description: Niver de atenuacion de la luz
          example: 90
        time:
          type: string
          format: date-time
          description: Tiempo al momento de recibir el dato
          example: 1996-12-19T16:39:57-08:00

    Device:
      required:
      - dev_id
      - app_id
      - client_id
      - type
      type: object
      properties:
        dev_id:
          type: string
          description: ID unico correspondiente al dispositivo
        type:
          type: string
          enum: [LORA]
          description: Tipo de dispositivo segun su tecnologia de comunicacion
          example: LORA
        app_id:
          type: string
          description: ID unico correspondiente a la aplicacion
        client_id:
          type: string
          description: ID unico correspondiente al cliente
        location:
          required:
          - lat
          - lon
          type: object
          description: Ubicacion en latitud y longitud del dispositivo
          properties:
            lat:
              type: number
              format: float
            lon:
              type: number
              format: float
          example: [-31.534976 -68.540897]
        created:
          type: string
          format: date-time
          description: Tiempo en el que fue creado el dispositivo
          example: '2018-03-20T09:12:28Z'
        EUI:
          type: string
          format: byte
          description: Device-EUI unico ligado al dispositivo LoRa
          example: 0080000004001FAB

    Zone:
      required:
      - zone_id
      - name
      - devices
      type: object
      properties:
        zone_id:
          type: string
          description: ID unico correspondiente a la zona
        name:
          type: string
          description: Nombre de la zona
          example: Zona_1
        devices:
          type: array
          items:
            type: string
            description: ID de los dispositivos incluidos en la zona
        geofence:
          type: array
          items:
            type: object
            required:
            - lat
            - lon
            description: Ubicacion en latitud y longitud
            properties:
                lat:
                  type: number
                  format: float
                lon:
                  type: number
                  format: float
          description: Geofence de la zona (conjunto de ubicaciones [lat,log] que demarcan la zona)
          example: [-31.534976 -68.540897]

    Zone_Group:
        required:
        - zone_group_id
        - name
        - zones
        type: object
        properties:
          zone_group_id:
            type: string
            description: ID unico correspondiente al grupo de zonas
          name:
            type: string
            description: Nombre del grupo de zonas
            example: Grupo A
          zones:
            type: array
            items:
              type: object
              properties:
                  zone_id:
                    type: string
              description: Arreglo de zonas
              example: [zone_id_1, zone_id_2, zone_id_3]
