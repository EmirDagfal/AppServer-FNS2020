openapi: 3.0.0

info:
  description: "API Gestion de Base de Datos MongoDB"
  version: 1.0.0
  title: Database Manager
  contact:
    email: emirdagfal@promatix.com.ar

servers:
- url: http://localhost:3000
  description: Servidor local
- url: https://mongodb-api-fns2020.herokuapp.com/
  description: Servidor heroku


paths:
  /alerts:
    post:
      tags: [Alerts]
      summary: Crear una alerta
      operationId: postAlerts
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'

      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Alert'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Alerts]
      summary: Obtener alertas
      operationId: getAlerts
      parameters:
      - $ref: '#/components/parameters/Alert_ID'
      - $ref: '#/components/parameters/Device_ID'
      - $ref: '#/components/parameters/Alert_Type'
      - $ref: '#/components/parameters/Alert_Code'
      - $ref: '#/components/parameters/Alert_Check'
      - $ref: '#/components/parameters/Quantity'
      - $ref: '#/components/parameters/From'
      - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Alerts]
      summary: Eliminar alertas
      operationId: deleteAlerts
      parameters:
      - $ref: '#/components/parameters/Alert_ID'
      - $ref: '#/components/parameters/Device_ID'
      - $ref: '#/components/parameters/Alert_Type'
      - $ref: '#/components/parameters/Alert_Code'
      - $ref: '#/components/parameters/Alert_Check'
      - $ref: '#/components/parameters/Quantity'
      - $ref: '#/components/parameters/From'
      - $ref: '#/components/parameters/To'
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /alerts/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Alerts]
      summary: Obtener alerta
      operationId: getAlert
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Alerts]
      summary: Actualizar alerta
      operationId: patchAlert
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Alerts]
      summary: Eliminar alerta
      operationId: deleteAlert
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /apps:
    post:
      tags: [Apps]
      summary: Crear una aplicación
      operationId: postApps
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/App'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Apps]
      summary: Obtener aplicaciónes
      operationId: getApps
      parameters:
        - $ref: '#/components/parameters/App_ID'
        - $ref: '#/components/parameters/Client_ID'
        - $ref: '#/components/parameters/App_Type'
        - $ref: '#/components/parameters/App_Tecnology'
        - $ref: '#/components/parameters/App_Hardware'
        - $ref: '#/components/parameters/App_Version'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /apps/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Apps]
      summary: Obtener aplicación
      operationId: getApp
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Apps]
      summary: Actualizar aplicación
      operationId: patchApp
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Apps]
      summary: Eliminar aplicación
      operationId: deleteApp
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /client:
    post:
      tags: [Clients]
      summary: Crear un cliente
      operationId: postClients
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Client'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Clients]
      summary: Obtener clientes
      operationId: getClients
      parameters:
        - $ref: '#/components/parameters/Client_ID'
        - $ref: '#/components/schemas/Client_Name'
        - $ref: '#/components/parameters/App_ID'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /client/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Clients]
      summary: Obtener cliente
      operationId: getClient
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Clients]
      summary: Actualizar cliente
      operationId: patchClient
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Clients]
      summary: Eliminar cliente
      operationId: deleteClient
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
  
  /data:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    post:
      tags: [Data]
      summary: Crear un dato
      operationId: postData
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Data'
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Data'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Data]
      summary: Obtener grupo de datos
      operationId: getDataGroups
      parameters:
        - $ref: '#/components/parameters/Data_ID'
        - $ref: '#/components/parameters/Device_ID'
        - $ref: '#/components/parameters/App_ID'
        - $ref: '#/components/parameters/Client_ID'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Data]
      summary: Eliminar grupos de datos
      operationId: deleteDataGroups
      parameters:
        - $ref: '#/components/parameters/Data_ID'
        - $ref: '#/components/parameters/Device_ID'
        - $ref: '#/components/parameters/App_ID'
        - $ref: '#/components/parameters/Client_ID'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
  
  /data/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Data]
      summary: Obtener datos
      operationId: getData
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Data]
      summary: Actualizar datos
      operationId: patchData
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Data]
      summary: Eliminar datos
      operationId: deleteData
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'


  /devices:
    post:
      tags: [Devices]
      summary: Crear un dispositivo
      operationId: postDevices
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Device'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Devices]
      summary: Obtener dispositivos
      operationId: getDevices
      parameters:
        - $ref: '#/components/parameters/Device_ID'
        - $ref: '#/components/parameters/Device_Type'
        - $ref: '#/components/parameters/App_ID'
        - $ref: '#/components/parameters/Client_ID'
        - $ref: '#/components/parameters/Device_EUI'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /devices/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Devices]
      summary: Obtener dispositivo
      operationId: getDevice
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Devices]
      summary: Actualizar dispositivo
      operationId: patchDevice
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Devices]
      summary: Eliminar dispositivo
      operationId: deleteDevice
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /zones:
    post:
      tags: [Zones]
      summary: Crear una zona
      operationId: postZones
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Zone'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Zones]
      summary: Obtener zonas
      operationId: getZones
      parameters:
        - $ref: '#/components/parameters/Zone_ID'
        - $ref: '#/components/parameters/Zone_Name'
        - $ref: '#/components/parameters/Device_ID'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /zones/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Zones]
      summary: Obtener zona
      operationId: getZone
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Zones]
      summary: Actualizar zona
      operationId: patchZone
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Zones]
      summary: Eliminar zona
      operationId: deleteZone
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /zone_grups:
    post:
      tags: [Zone_Groups]
      summary: Crear un grupo de zonas
      operationId: postZone_Groups
      requestBody:
        description: Datos del recurso a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone_Group'
      responses:
        201:
          description: Recurso creado exitosamente
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Zone_Group'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    get:
      tags: [Zone_Groups]
      summary: Obtener grupos de zonas
      operationId: getZone_Groups
      parameters:
        - $ref: '#/components/parameters/Zone_Group_ID'
        - $ref: '#/components/parameters/Zone_Group_Name'
        - $ref: '#/components/parameters/Zone_ID'
        - $ref: '#/components/parameters/Quantity'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone_Group'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

  /zone_grups/{_id}:
    parameters:
      - $ref: '#/components/parameters/ID_Path'
    get:
      tags: [Zone_Groups]
      summary: Obtener grupo de zonas
      operationId: getZone_Group
      responses:
        200:
          description: Recurso obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone_Group'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    patch:
      tags: [Zone_Groups]
      summary: Actualizar grupo de zonas
      operationId: patchZone_Group
      responses:
        200:
          description: Recurso actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone_Group'
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'
    delete:
      tags: [Zone_Groups]
      summary: Eliminar grupo de zonas
      operationId: deleteZone_Group
      responses:
        204:
          description: Recurso eliminado exitosamente
          content: {}
        400:
          $ref: '#/components/responses/Bad_Request'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/Internal_Server_Error'
        503:
          $ref: '#/components/responses/Service_Unavailable'

components:
  schemas:
    Date:
      type: string
      format: date-time
      example: '2018-03-20T12:12:28Z'
    Error:
      type: object
      properties:
        code:
          type: string
          description: Codigo del error
          example: IC201
        error:
          type: string
          description: Nombre del error
          example: Creacion de dispositivo
        description:
          type: string
          description: Descripcion del error
          example: No se pudo acceder a la base de datos
    ID:
      type: string
      format: uuid
      example: 5e1a0651741b255ddda996c4
    Created:
      type: string
      format: date-time
      description: Tiempo en el que fue creado
      example: '2018-03-20T09:12:28Z'
    Updated:
      type: string
      format: date-time
      description: Tiempo en el que fue actualizado
      example: '2018-03-20T09:12:28Z'

    Location:
      required:
      - lat
      - lon
      type: object
      description: Ubicacion en latitud y longitud
      properties:
        lat:
          type: number
          format: float
        lon:
          type: number
          format: float
      example: [-31.534976 -68.540897]
    Geofence:
      type: array
      items:
        $ref: '#/components/schemas/Location'
      description: Geofence de la zona (conjunto de ubicaciones [lat,log] que demarcan la zona)
      example: [-31.534976 -68.540897]

    Alert:
      required:
      - dev_id
      - type
      - code
      - time
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/Alert_ID'
        dev_id:
          $ref: '#/components/schemas/Device_ID'
        type:
          $ref: '#/components/schemas/Alert_Type'
        code:
          $ref: '#/components/schemas/Alert_Code'
        checked:
          $ref: '#/components/schemas/Alert_Check'
        createdAt:
          $ref: '#/components/schemas/Created'
        updatedAt:
          $ref: '#/components/schemas/Updated'
    Alert_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico correspondiente a la alerta
    Alert_Type:
      type: string
      description: Tipo de alerta
      format: uppercase
      example: POWER
    Alert_Code:
      type: string
      description: Codigo de alerta
      example: AP101
    Alert_Check:
      type: boolean
      description: Alerta vista
      example: false
    

    App:
      required:
        - name
        - version
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/App_ID'
        name:
          $ref: '#/components/schemas/App_name'
        client_id:
          $ref: '#/components/schemas/Client_ID'
        type:
          $ref: '#/components/schemas/App_Type'
        Tecnology:
          $ref: '#/components/schemas/App_Tecnology'
        Hardware:
          $ref: '#/components/schemas/App_Hardware'
        vesion:
          $ref: '#/components/schemas/App_Version'
        description:
          $ref: '#/components/schemas/App_Description'
        createdAt:
          $ref: '#/components/schemas/Created'
        updatedAt:
          $ref: '#/components/schemas/Updated'
    App_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico correspondiente a la aplicacion
    App_name:
      type: string
      description: Nombre para mostrar de la aplicacion
      example: Alumbrado publico
    App_Type:
      type: string
      format: uppercase
      description: Tipo de aplicacion por interpretacion de datos (WATER-METERING, GAS-METERING, LIGHTING, etc)
      example: LIGHTING
    App_Tecnology:
      type: string
      format: uppercase
      description: Tecnologia de comunicacion utilizado por el Hardware (LORA, ZIGBEE, etc)
      example: LORA
    App_Hardware:
      type: string
      description: Hardware utilizado (SmartCell-LoRa-v1, SmartCell-LoRa-v1-Meter). Composicion => Placa -Version [-Adaptacion -Version]
      example: SmartCell-LoRa-v1-Meter-v2
    App_Version:
      type: string
      description: Version de la aplicacion
      example: 1.0.0
    App_Description:
      type: string
      description: Descripcion breve de la aplicacion
      example: Aplicacion de luminarias publicas controladas por LoRaWAN

    Client:
      required:
        - name
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/Client_ID'
        name:
          $ref: '#/components/schemas/Client_Name'
        apps:
          type: array
          items:
            $ref: '#/components/schemas/App_ID'
        createdAt:
          $ref: '#/components/schemas/Created'
        updatedAt:
          $ref: '#/components/schemas/Updated'
    Client_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico correspondiente al cliente
    Client_Name:
      type: string
      description: Nombre del cliente
      example: Municipalidad de la Ciudad de San Juan

    Data:
      required:
      - dev_id
      - time
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/Data_ID'
        dev_id:
          $ref: '#/components/schemas/Power'
        power:
          $ref: '#/components/schemas/Device_ID'
        dimming:
          $ref: '#/components/schemas/Dimming'
        energy:
          $ref: '#/components/schemas/Energy'
        createdAt:
          $ref: '#/components/schemas/Created'
        updatedAt:
          $ref: '#/components/schemas/Updated'
    Data_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico correspondiente al dato
    Power:
      type: number
      format: float
      description: Potencia media sensada en el dispositivo [W]
      example: 215.7
    Energy:
      type: number
      format: float
      description: Consumo de energia indicada por medidor externo [wh]
      example: 152
    Dimming:
      type: number
      format: unsigned int
      description: Niver de intensidad de la luz [%]
      example: 90

    Device:
      required:
      - app_id
      - client_id
      - type
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/Device_ID'
        type:
          $ref: '#/components/schemas/Device_Type'
        app_id:
          $ref: '#/components/schemas/App_ID'
        client_id:
          $ref: '#/components/schemas/Client_ID'
        location:
          $ref: '#/components/schemas/Location'
        EUI:
          $ref: '#/components/schemas/Device_EUI'
        createdAt:
          $ref: '#/components/schemas/Created'
        updatedAt:
          $ref: '#/components/schemas/Updated'
    Device_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico del recurso. En caso de que el dispositivo sea LoRa, es aconsejable que coincida con el devEUI
    Device_Type:
      type: string
      format: uppercase
      description: Tipo de dispositivo segun su tecnologia de comunicacion
      example: LORA
    Device_EUI:
      type: string
      format: byte
      description: Device-EUI unico ligado al dispositivo LoRa
      example: 0080000004001FAB

    Zone:
      required:
      - name
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/Zone_ID'
        name:
          $ref: '#/components/schemas/Zone_Name'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device_ID'
        geofence:
          $ref: '#/components/schemas/Geofence'
        createdAt:
          $ref: '#/components/schemas/Created'
        updatedAt:
          $ref: '#/components/schemas/Updated'
    Zone_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico correspondiente a la zona
    Zone_Name:
      type: string
      description: Nombre de la zona
      example: Zona_1

    Zone_Group:
        required:
        - name
        - zones
        type: object
        properties:
          _id:
            $ref: '#/components/schemas/ID'
          name:
            $ref: '#/components/schemas/Zone_Group_ID'
          zones:
            type: array
            items:
              $ref: '#/components/schemas/Zone_Group_ID'
          createdAt:
            type: string
            format: date-time
            description: Tiempo en el que fue creado
            example: '2018-03-20T09:12:28Z'
          updatedAt:
            type: string
            format: date-time
            description: Tiempo en el que fue actualizado
            example: '2018-03-20T09:12:28Z'
    Zone_Group_ID:
      $ref: '#/components/schemas/ID'
      description: ID unico correspondiente al grupo de zonas
    Zone_Group_Name:
      type: string
      description: Nombre del grupo de zonas
      example: Grupo A

  responses:
    Bad_Request:
      description: El servidor no pudo interpretar la solicitud dada una sintaxis inválida [400]
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Es necesario autenticar para obtener la respuesta solicitada (autenticación es posible) [401]
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: El cliente no posee los permisos necesarios para cierto contenido [403]
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Not Found:
      description: El servidor no pudo encontrar el contenido solicitado [404]
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Internal_Server_Error:
      description: El servidor ha encontrado una situación que no sabe como manejarla [500]
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Service_Unavailable:
      description: El servidor no esta listo para manejar la petición [503]
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  parameters:
    ID_Path:
      name: _id
      in: path
      required: true
      description: ID unico del recurso
      schema:
        $ref: '#/components/schemas/ID'
    ID:
      name: _id
      in: query
      required: false
      description: ID unico del recurso
      schema:
        $ref: '#/components/schemas/ID'

    Quantity:
      name: quantity
      in: query
      required: false
      description: Cantidad de maxima de elementos
      schema:
        type: number
        description: Cantidad de elementos
        example: 50
    From:
      name: from
      in: query
      schema:
        $ref: '#/components/schemas/Date'
        description: Desde
      required: false
    To:
      name: to
      in: query
      schema:
        $ref: '#/components/schemas/Date'
        description: Hasta
      required: false

    Alert_ID:
      name: alert_id
      in: query
      schema:
        $ref: '#/components/schemas/Alert_ID'
      required: false
    Alert_Type:
      name: type
      in: query
      schema:
        $ref: '#/components/schemas/Alert_Type'
      required: false
    Alert_Code:
      name: code
      in: query
      schema:
        $ref: '#/components/schemas/Alert_Code'
      required: false
    Alert_Check:
      name: checked
      in: query
      schema:
        $ref: '#/components/schemas/Alert_Check'
      required: false

    App_ID:
      name: app_id
      in: query
      schema:
        $ref: '#/components/schemas/App_ID'
      required: false
    App_Type:
      name: type
      in: query
      schema:
        $ref: '#/components/schemas/App_Type'
      required: false
    App_Tecnology:
      name: tecnology
      in: query
      schema:
        $ref: '#/components/schemas/App_Tecnology'
      required: false
    App_Hardware:
      name: hardware
      in: query
      schema:
        $ref: '#/components/schemas/App_Hardware'
      required: false
    App_Version:
      name: version
      in: query
      schema:
        $ref: '#/components/schemas/App_Version'
      required: false
    
    Client_ID:
      name: client_id
      in: query
      schema:
        $ref: '#/components/schemas/Client_ID'
      required: false
    Client_Name:
      name: name
      in: query
      schema:
        $ref: '#/components/schemas/Client_Name'
      required: false

    Data_ID:
      name: data_id
      in: query
      schema:
        $ref: '#/components/schemas/Data_ID'
      required: false

    Device_ID:
      name: device_id
      in: query
      schema:
        $ref: '#/components/schemas/Device_ID'
      required: false
    Device_Type:
      name: type
      in: query
      schema:
        $ref: '#/components/schemas/Device_Type'
      required: false
    Device_EUI:
      name: EUI
      in: query
      schema:
        $ref: '#/components/schemas/Device_EUI'
      required: false

    Zone_ID:
      name: zone_id
      in: query
      schema:
        $ref: '#/components/schemas/Zone_ID'
      required: false
    Zone_Name:
      name: name
      in: query
      schema:
        $ref: '#/components/schemas/Zone_Name'
      required: false
    
    Zone_Group_ID:
      name: zone_group_id
      in: query
      schema:
        $ref: '#/components/schemas/Zone_Group_ID'
      required: false
    Zone_Group_Name:
      name: name
      in: query
      schema:
        $ref: '#/components/schemas/Zone_Group_Name'
      required: false